
Java_Spring_Topics_A3 To A5_Cloud1

Q1>Choose the scope which is added in Spring5 version?
   Single Choice - Select one correct answer from the options list.
  a. Session
  b. WebSocket
  c. Singleton
  d. Prototype

Q2>Which of the following method is used to return a TransactionStatus object that depends on a TransactionDefinition parameter?
  
Single Choice - Select one correct answer from the options list.
 a.getTransaction()
 b.setTransaction()
 c.isNewTransaction()
 d.setRollbackOnly()

Q3> How to configure spring in a web application?
Single Choice - Select one correct answer from the options list.

a. <listener>
   <listener-class> context.ContextLoaderListener</listener-class>
   </listener>

b.  <listener>
   <listener-class>org.springframework.web.context</listener-class>
   </listener>

c. <listener>
   <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
   </listener>

d. <listener>
   <listener-class>org.web.context.ContextLoaderListener</listener-class>
   </listener>

Q4> Which of the following interface are not used to create an Advice in Spring framework?
Single Choice - Select one correct answer from the options list.

  a.org.aopalliance.intercept.MethodInterceptor
  b.org.springframework.aop.BeforeAdvice
  c.org.springframework.aop.MethodSingleton
  d.org.springframework.aop.ThrowsAdvice

Q5> How to configure database driver in spring?
Single Choice - Select one correct answer from the options list.

 a.To configure your database driver using datasource "org.springframework.jdbc.datasource.DriverManagerDataSource". 
 For Example:
  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
   <property name="driverClassName">
     <value>org.hsqldb.jdbcDriver</value>
   </property>
  <property name="url">
    <value>jdbc:hsqldb:db/appfuse</value>
   </property>
   <property name="username"><value>sa</value></property>
   <property name="password"><value></value></property>
 </bean>
To configure your database driver using datasource "org.springframework.jdbc.datasource.DriverManagerDataSource". For Example:

<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
  <property name="driverClassName">
    <value>org.hsqldb.jdbcDriver</value>
  </property>
  <property name="url">
    <value>jdbc:db/appfuse</value>
  </property>
  <property name="username"><value>sa</value></property>
  <property name="password"><value></value></property>
</bean>
To configure your database driver using datasource "org.springframework.jdbc.datasource.DriverManagerDataSource". For Example:

<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
  <property name="driverClassName" value=”value”>
    <value>org.hsqldb.jdbcDriver</value>
  </property>
  <property name="url">
    <value>jdbc:hsqldb:db/appfuse</value>
  </property>
  <property name="username"><value>sa</value></property>
  <property name="password"><value></value></property>
</bean>
To configure your database driver using datasource "org.springframework.jdbc.datasource.DriverManagerDataSource". For Example:

<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
  <property name="driverClassName">
    <value>org.hsqldb.jdbcDriver</value>
  </property>
  <property name="url">
    <value>jdbc:hsqldb:db/appfuse</value>
  </property>
  <properties name="username" value=”sa”></properties>
  <properties name="password" value=”sa”> </properties>
</bean>
Q6

 
What is the purpose of “Prototype” scope for a bean in Spring?
Single Choice - Select one correct answer from the options list.
Spring creates a new object every-time for the given class
Spring creates only one instance for the given class
There is no such thing as a “Prototype” scope for a spring bean
Spring beans don’t have scopes, it’s just a bean.
Q7

 
What is data-source in spring?
Single Choice - Select one correct answer from the options list.
Means to provide connection details to the database
Input file reader from which you can read data
Both A and B
None of the above
Q8

 
What are the different points where weaving can be applied?
Single Choice - Select one correct answer from the options list.
RunTime.
CompileTime.
ClassLoadTime.
All the Above.
Q9

 
Following property is set for what reason
spring.autoconfigure.exclude=
my.xyz.SomeAutoConfig
Single Choice - Select one correct answer from the options list.
To exclude unnecessary or misconfigured 
Auto configurations via
properties 
Reconfiguring 
AutoConfiguration via
properties
Overriding conditions
For completely
custom 
Autoconfiguration
Q10

 
Which of the following types of testing are supported by spring?
Multiple Choice - This may have multiple correct answers. Select required answer(s) from the options list.
Unit Testing.
Intergration Testing.
BlackboxTesting
WhiteBocTesting
Q11

 
The different modules in Spring framework are?
• Application context module
• The Core container module
• AOP module (Aspect Oriented Programming)
• JDBC abstraction and DAO module
• O/R mapping integration module (Object/Relational)
• Web module
• MVC framework module

Single Choice - Select one correct answer from the options list.
True.
False.
Q12

 
When using the ApplicationContext directly, other than in a web-based environment, how do you guarantee that Spring will properly shut down the container, calling relevant destroy callbacks, when the program is about to exit?
Single Choice - Select one correct answer from the options list.
Create a Runnable that extends the AbstractApplicationContextCall class and call the    registerShutdownHook() method from within the run method.
Call the registerShutdownHook() method statically on the application context as soon as the program starts, but before creating the application context.
Call the registerShutdownHook() method on the application context as soon as the application context is created.
Call the registerShutdownHook() method on the application context, passing the main application thread reference.
Q13

 
Which of the following are bean factory post processors
Single Choice - Select one correct answer from the options list.
CustomEditorConfigurer
PropertyPlaceholderConfigurer
Both of the above
None of the above
Q14

 
What is the use of <tx:annotation-driven/> ?
Single Choice - Select one correct answer from the options list.
Scans for @Controller, @Service, @Repository
Enables scanning of declarative transactions
It enables the transfer of messages via JMS
None of the above
Q15

 
What is the purpose of init-method and destroy- method in Spring bean?
Single Choice - Select one correct answer from the options list.
There are no such methods in spring bean
Init-method helps with performing custom initialization while destroy method helps in cleaning up any resources once the context is destroyed.
Calling destroy-method crashes the spring container while init-method restarts the spring container
None of the above
Q16

 
Consider the following code 
. <tx:advice id="txAdvice" transaction-manager="txManager"> 
<tx:attributes> 
  <tx:method name="*" read-only="true" rollback-for="NoEmployeeFound"/> 
</tx:attributes> 
</tx:advice>
Based on the sample code above, the rollback-for attribute within the <tx:method> element causes Spring to rollback a transaction if a(n):
Single Choice - Select one correct answer from the options list.
Checked exception of the class "NoEmployeeFound" or any unchecked exception or error is thrown.
checked exception of the class "NoEmployeeFound" is thrown.
throwable containing the message "NoEmployeeFound" is thrown.
unchecked exception of the class "NoEmployeeFound" or any checked exception or error is thrown.
Q17

 
/* Employee.java */
package com.acme.hr;

public class Employee {
private String name;
private int age;

public Employee(String name) {
  setName(name);
}
public void setName(String pName) {
  name = pName;
}
public void setAge(int pAge) {
}
public void init() {
  setName("Bob Smith");
}
public void init2() {
  setName("Robert Smith");
}
}

<!-- Springconfig.xml -->

<beans default-init-method="init">

<bean id="employee" class="com.acme.hr.Employee" init-method="init2">
  <constructor-arg index="0" value="John Doe"/>
  <property name="name" value="Jane Doe" />
  <property name="age" value="35" />
</bean>

</beans>
Based on the sample code above, what is value of the name attribute for the employee bean after the container creates and initializes the bean?
Single Choice - Select one correct answer from the options list.
Bob Smith
Robert Smith
Bob Doe
John Doe
Q18

 
Select the scopes of a bean available with Bean Factory: (Choose 2)
Multiple Choice - This may have multiple correct answers. Select required answer(s) from the options list.
Singleton.
Prototype
Request.
Session.
Q19

 
How to configure JNDI instead of datasource in spring applicationcontext.xml?
Single Choice - Select one correct answer from the options list.
You can configure JNDI instead of datasource in spring applicationcontext.xml using "org.springframework.jndi.JndiObjectFactoryBean". For Example:

<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
  <property name="className">
    <values>java:comp/env/jdbc/appfuse</values>
  </property>
</bean>
 

You can configure JNDI instead of datasource in spring applicationcontext.xml using "org.springframework.jndi.JndiObjectFactoryBean". For Example:

<bean name="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
  <property name="viewClass">
    <value>java:comp/env/jdbc/appfuse</value>
  </property>
</bean>
 
You can configure JNDI instead of datasource in spring applicationcontext.xml using "org.springframework.jndi.JndiObjectFactoryBean". For Example:

<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
  <properties name="jndiDataSource">
    <value>java:comp/env/jdbc/appfuse</value>
  </properties>
</bean>
 
You can configure JNDI instead of datasource in spring applicationcontext.xml using "org.springframework.jndi.JndiObjectFactoryBean". For Example:

<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
  <property name="jndiName">
    <value>java:comp/env/jdbc/appfuse</value>
  </property>
</bean>
 
Q20

 
return new ModelAndView("welcomePage","WelcomeMessage","Welcome!");

In the above code the first parameter is the logical name of a vew component.
Single Choice - Select one correct answer from the options list.
TRUE
FALSE
Q21

 
What is the use of JdbcTemplate in spring?
Single Choice - Select one correct answer from the options list.
Class that manages connection to databases
Eliminates boiler plate code
Handles SQL Exception properly
All of the above
Q22

 
Which of the following can be used to configure context loader in web.xml file
Single Choice - Select one correct answer from the options list.
ContextLoaderListener
ContextLoader
ContextListener
None of the above
Q23

 
Which is used to map the logical View names to actual viewimplementations in spring MVC?
  
Single Choice - Select one correct answer from the options list.
ViewResolver.
HandlerMapping.
ModelandView.
None of the above.
Q24

 
When injecting values using a constructor, what attributes are required within the <constructor-arg> element if no bean definition is embedded within the <constructor-arg> element?
Single Choice - Select one correct answer from the options list.
value and type
value or index
value and ref
value or ref
Q25

 
Which of the following method is used to return fetch size specified for the JdbcTemplate class?
Single Choice - Select one correct answer from the options list.
getMaxRows()
getFetchSize()
getColumnMapRowMapper()
getColumnSize()
Q26

 
Overriding the struts RequestProcessor protects the Struts action from knowing that it is being managed by spring.State true or false .
Single Choice - Select one correct answer from the options list.
True.
False.
Q27

 
Which of the following is not the types of Advice?
Single Choice - Select one correct answer from the options list.
Before advice.
After returning advice.
After completion advice.
After advice.
Q28

 
Which is the correct way to configure server port in spring boot application
Single Choice - Select one correct answer from the options list.
add property 'server.port' in application.properties in /src/main/resources
set boot.server.port as a system property using JVM command line option 
adding an entry in conf/context.xml of embedded container
add property server: port: 8080 in application.properties in /src/main/resources
Q29

 
Which dependency need to be
mentioned to enable Spring MVC 
module in an application
Single Choice - Select one correct answer from the options list.
spring-boot-starter-data-jpa
spring-boot-starter-web
spring-boot-starter-test
spring-boot-starter-tomcat
Q30

 
In DAO, The implementation of an application object requires only hibernate session factory.
This can be provided as a simple bean reference from the spring application context. 
Select the valid bean implementation for the above scenario:
Single Choice - Select one correct answer from the options list.
<beans>
   <bean id=”emplDao” class=”emp.empDao”>
   <property name=”sessionfactory” ref=”mysessionfactory”>
   </bean>
   </beans>
<beans id=”emplDao” class=”emp.empDao”>
   <property name=”sessionfactory” ref=”mysessionfactory”>
   </beans>
 
<beans>
  < bean id=”emplDao” class=”emp.empDao”>
   <property name=”*” ref=”mysessionfactory”>
 </bean>
 </beans>
<beans>
     <property name=”*” ref=”mysessionfactory”>
 </bean>
 </beans>
Spring

